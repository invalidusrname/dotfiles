# add key to remote server
function authme {
  ssh $1 'cat >>.ssh/authorized_keys' <~/.ssh/id_rsa.pub
}

if [ -r $HOME/.git-completion.sh ];
then
  source $HOME/.git-completion.sh
fi                                

function parse_git_branch {
  branch_prompt=$(__git_ps1)
  if [ -n "$branch_prompt" ]; then
    status_icon=$(git_status)
    echo "$branch_prompt$status_icon "
  fi
}

# Show character if changes are pending
function git_status() {
  if current_git_status=$(git status | grep 'added to commit' 2> /dev/null); then
    echo ' +'
  fi
}

# For running specific features.
function rff {
 rake features FEATURE=features/"$1".feature
}

# For running specific line numbers
function rffl {
 cucumber features/"$1".feature:"$2"
}

# run puppet in development mode
function rp {
  sudo puppet apply --environment development --debug --confdir /var/puppet /var/puppet/environments/development/manifests
}

function git_report {
  x=`pwd`
  if [ -d $1/.git ]; then
    cd $1
    OUT=$(git $2)
    if [ ! -z "$OUT" ]; then
      basename `pwd`
      echo "$OUT"
    fi
    OUT=''
  else
    for d in $1/*; do
      cd $d
      OUT=$(git $2)
      if [ ! -z "$OUT" ]; then
        basename `pwd`
        echo "$OUT"
      fi
      OUT=''
    done
  fi

  cd $x
}

function lw {
  git_report /var/apps lw
  git_report /var/gems lw
  git_report /var/gems lw
}

function cw {
  git_report /var/apps cw
  git_report /var/gems cw
}

function td {
  git_report /var/apps td
  git_report /var/gems td
  git_report /var/puppet td
}


man() {
  env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m") \
    LESS_TERMCAP_md=$(printf "\e[1;31m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;32m") \
      man "$@"
}

function pv() {
  local d="${1:-$HOME/Downloads/torrents/complete}"
  local extension="${2:-mp4}"

  for F in $(find "$d" | grep "$extension"); do
    if [ -f "$F" ]; then
      NAME=$(basename $F)
      DESTINATION="$d/$NAME"
      if [[ "$F" != "$DESTINATION" ]]; then
        echo "Moving $F to $DESTINATION"
        mv "$F" $DESTINATION;
      fi
    fi
  done
}

function update_ruby_versions() {
  cd $HOME/.rbenv/plugins/ruby-build && git pull && cd -
}

clean_branches() {
  git remote prune origin
  git branch -vv | grep "origin/.*: gone]" | awk '{print $1}' | xargs git branch -D
}
